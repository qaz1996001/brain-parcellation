# docker-compose.yml
version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres
    container_name: minio-backup-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: minio_backup
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  orthanc:
    image: orthancteam/orthanc:24.7.1
    depends_on:
      - postgres
      - minio
    restart: unless-stopped
    ports:
      - "4242:4242"
      - "8042:8042"
    volumes:
      - orthanc-storage:/var/lib/orthanc/db
      - ./orthanc.json:/etc/orthanc/orthanc.json:ro  # 映射設定檔到宿主機
    environment:
      VERBOSE_STARTUP: "true"
      VERBOSE_ENABLED: "true"
      ORTHANC__NAME: "ORTHANC PostgreSQL and MinIO"
      # PostgreSQL configuration
      ORTHANC__POSTGRESQL: |
        {
          "Host": "postgres",
          "EnableVerboseLogs": true
        }
      # MinIO/S3 configuration
      ORTHANC__AWS_S3_STORAGE__BUCKET_NAME: "my-sample-bucket"
      ORTHANC__AWS_S3_STORAGE__REGION: "us-east-1"
      ORTHANC__AWS_S3_STORAGE__ACCESS_KEY: "minioadmin"
      ORTHANC__AWS_S3_STORAGE__SECRET_KEY: "minioadmin"
      ORTHANC__AWS_S3_STORAGE__ENDPOINT: "http://minio:9000"
      ORTHANC__AWS_S3_STORAGE__VIRTUAL_ADDRESSING: "false"
      # Optional hybrid mode - uncomment one if needed
      # ORTHANC__AWS_S3_STORAGE__HYBRID_MODE: "WriteToObjectStorage"
      # ORTHANC__AWS_S3_STORAGE__HYBRID_MODE: "WriteToFileSystem"

      # Plugin configuration
      OSIMIS_WEB_VIEWER1_PLUGIN_ENABLED: "true"
      STONE_WEB_VIEWER_PLUGIN_ENABLED: "true"
      DICOM_WEB_PLUGIN_ENABLED: "true"
      ORTHANC__DICOM_WEB__PUBLIC_ROOT: "/dicom-web"
      ORTHANC__ORTHANC_EXPLORER_2__UI_OPTIONS__ENABLE_OPEN_IN_OHIF_VIEWER_3: "true"
      # Authentication
      ORTHANC__AUTHENTICATION_ENABLED: "false"

  # MinIO server
  minio:
    image: minio/minio
    container_name: minio-backup-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # FastAPI application
#  api:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: minio-backup-api
#    environment:
#      MINIO_ENDPOINT: minio:9000
#      MINIO_ACCESS_KEY: minioadmin
#      MINIO_SECRET_KEY: minioadmin
#      MINIO_SECURE: "false"
#      SQLALCHEMY_DATABASE_URL: postgresql://postgres:postgres@postgres/minio_backup
#    ports:
#      - "8000:8000"
#    depends_on:
#      postgres:
#        condition: service_healthy
#      minio:
#        condition: service_healthy
#    volumes:
#      - ./app:/app/app
#      - backup_data:/backups
#    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload


volumes:
  postgres_data:
  minio_data:
  backup_data:
  orthanc-storage: